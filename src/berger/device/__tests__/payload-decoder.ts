import payloadDecoder from '../payload-decoder';

describe('payloadDecoder', () => {
  it('works with good fixture', async () => {
    // TODO: let's fetch this from a file somewhere, yeah?
    const fixture =
      'AQABADbTAAAAAAAAUwYAAE8GAAAAABUAAAAdcwPoHWHQHS8PHUSAGyoQHQAAADABLwYAAP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD8APgDgAP6A38D+wOAAvsDfwP7AAECgAL7A38D4wcKBQIDCQYIAwkDBgYRAwgDCQMJBgwFAwPgCwYIAQMHCgcCCAMFChADBwMJAwcJCQkBAuAEAQEBAQEDBQQBAQEGBgQBAQEEBgMJAgUDAQEBBQ8EBgMJAwYEAQEBBQYEAQEBBuADCAEEBAYEBQQGAwYCCAMNAxEDBQMJAwUEBgMGAwYE3wMOAwcEBQMIAwQDCQMNAxEDBAMJAwUDCAMEAwgD4AMNAgkDBQIJAwUCCAMOBBEDAwMKAgUCCQMEAwgD4AMNAwgDBAQIAwQDCQIPAhIEAgMJAwQECAMEAwgE3wUBAQgDCQMFAgoCBQIIAw8DEwMBAwkDBQIKAgQCCgLhCAYDCQMEAwkEAwMJAw4DFAYJAwQDCQMDBAgD5AcFAgkDBAMKAgUCCAMPAxQGCQMEAwoCBAIKAugEAwMJAwQDCQMEAwkCDwMTAwEDCQMEAwkDBAMIA+kDBAMIAwUDCAMFAggDDwITAwIDCQMFAwgDBAMIA+kDBAMIAwUDCAMFAwcEDQMSAwMDCQMFAwgDBAMIBOgDBQMGBAYDBgMGAwYEDQQRAwQDCAQGAwYDBgMGBOEBAQEEAwYFAwUGBQMDCAQCAwECBQIBAQMEEQMFAwMBAgYGBQMDBwUDBeALBwgBAwcKCAgBAwUKEAQGAwMFAQMHCggIAQPiBwsFAgMJBgwFAwMGBhEEBwMCBQIDCQYMBQMC+wAlAykD+wBXAikD+wBWAykD+wBXAikD+wBWAykD+wBXAikD/wD/AP8A/wD/AP4AfAEBAkQCkgGiBTEFDgKRAqIFLgkNApICoAQwAgYCDAKRAnYDBQQFBggGBgQGAwkGBwMFAw8CCwIOBQMKBgQGCREDAwoFBw4HAgoLAgkJBwUFAwYHAwo0BAUDBAoECQUDBgQHCgQFBAMGAwEDAwIKAgwIAwkECAQKEAQDCQQJCwkDCQoCCgoECQMEBAgDCjUDBQMEAwEBAQQDBQEFBAMHAwYGAQQEBgMDBAoCAgoCCwUCAQQBAQQBAQUDAQUDAQEBAQURBAIBAQEBAQEEAwUBBAsDAQECAgUEDgIMAwEBBQUCAwMDBAQBAQEDAwEBAgEENQMFBAMDCgMFBAMEBQQGAwUEBAUDAwQBAgIDAgMCCQILAwwDBgQDAwgDEgMJBAMDEQQMAw0CDQMHBAoBBQMOBDUEBQMDBAkEBQQDAwcDBgMGAwMGAwMDAgICBAICAQoCCgMMAwcDBAMGBAUFBwEBBAkDAwMJBgIECwQOAgwEBgMRAw0ENwQBAQEEBAYGAwcEAgMGBAUEBgQCAwEDAgMDAgICAwIDAgkCCggIAwYDBAMFBAYFBAkEAQEBAQQDBgYGAgULAw0CDQMHAxEECwM4DQMIBAQGAwMEBgMFBAYDBAMBAwEDAwICAwICAwEKAgoKBQQFBAQEAwQHAQEBAQECCgQJBAgEAQEBAQEEBggDDgIMAwcEAgEBAQYBBQYGBDoLBgcDAwcDAwMGBAUEBgQCAwIDAQMDAgIHAgIKAgoEAgQGAgcDBAMDBA8EAwQDCQYHDAYIAw0CDQQHCAQDBgUGAzsDBQMKBAIEBgMDAwcDBQQGAwMEAgYEAQICAgEEAgoCCgMEAwUEBgMEAwMDEAQDAwkECgMLAwwDDgIMAwkHBAMEBAkDOgQFAwsDAgQFBAMEBQQGAwUEAwMDBgQCCQILAgoEAwMGAwYDBAMDAxADBAQJAwoDCwMLBA0CDQMNAwQDBAQIBDsDBQQDAgEBAgMEBQIEBAMCAQEBAQQBAQEBAgUCBAUDAwUFAwUDDAILAwMDBQQCAQQEAQMEBQICCgQBAQEEAgEBAQEBAQQEAgEBAQQKBQMBBwQBAQsCDAQBAQQBAQEBAQEDCwQEAQQEAwI0BAUDBAkFCQUDAgwDCgQDBQQGCQ0CCwgHBgQIBQgLCQQJBAgMCQYGCgINBwQICwkECTUDBQMFBwgGBgMCDAUGBgQEBAgBAQIQAg0FBwYHBAgGDQkDCQUGDwYHBQwCDAYFCA0HBgarApEC/wBb';

    const buffer = Buffer.from(fixture, 'base64');

    const results = await payloadDecoder(buffer);

    expect(results.header.deviceId).toBe(1);
    expect(results.header.command).toBe(1);
    expect(results.header.commandId).toBe(54070);
    expect(results.header.crc).toBe(0);
    expect(results.header.length).toBe(1619);

    expect(results.blob.length).toBe(1619);

    expect(results.blob.length).toEqual(results.header.length);
  });
});
